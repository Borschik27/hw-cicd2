---
# tasks file for nexus-role
- name: Install OpenJDK 8
  become: true
  apt:
    name: 
      - openjdk-8-jdk
    state: present
    update_cache: yes

- name: Create Nexus user and group with home directory
  become: true
  ansible.builtin.user:
    name: "{{ nexus_user_name }}"
#    group: "{{ nexus_user_group }}"
    state: present
    create_home: yes
    home: "/home/{{ nexus_user_name }}"
    shell: /bin/bash

- name: Create Nexus directories
  become: true
  file:
    group: "{{ nexus_user_group }}"
    owner: "{{ nexus_user_name }}"
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ nexus_directory_log }}"
    - "{{ nexus_directory_data }}"
    - "{{ nexus_directory_data }}/etc"
    - "{{ nexus_directory_package }}"
    - "{{ nexus_directory_tmp }}"

- name: Download Nexus
  become: true
  get_url:
    dest: "{{ nexus_directory_package }}/nexus-{{ nexus_version }}.tar.gz"
    url: "{{ nexus_download_url }}/nexus-{{ nexus_version }}-unix.tar.gz"
    timeout: 15
    
- name: Unpack Nexus
  become: true
  unarchive:
    copy: no
    creates: "{{ nexus_directory_package }}/nexus-{{ nexus_version }}"
    dest: "{{ nexus_directory_package }}"
    src: "{{ nexus_directory_package }}/nexus-{{ nexus_version }}.tar.gz"

- name: Link to Nexus Directory
  become: true
  file:
    dest: "{{ nexus_directory_home }}"
    src: "{{ nexus_directory_package }}/nexus-{{ nexus_version }}"
    state: link


- name: Add run_as_user to Nexus.rc
  become: true
  lineinfile:
    create: yes
    dest: "{{ nexus_directory_home }}/bin/nexus.rc"
    insertafter: EOF
    line: "run_as_user=\"{{ nexus_user_name }}\""
    regexp: "^run_as_user"

- name: Raise nofile limit for Nexus user
  become: true
  pam_limits:
    domain: "{{ nexus_user_name }}"
    limit_type: "-"
    limit_item: nofile
    value: "{{ nexus_ulimit }}"

- name: Create Nexus service for SystemD
  become: true
  template:
    dest: /lib/systemd/system/nexus.service
    mode: 0644
    src: nexus.systemd.j2

- name: Ensure Nexus service is enabled for SystemD
  become: true
  systemd:
    daemon_reload: yes
    enabled: yes
    name: nexus
  when:
    - nexus_service_enabled

- name: Create Nexus vmoptions
  become: true
  template:
    dest: "{{ nexus_directory_home }}/bin/nexus.vmoptions"
    src: nexus.vmoptions.j2
  register: nexus_config_changed

- name: Create Nexus properties
  become: true
  template:
    dest: "{{ nexus_directory_data }}/etc/nexus.properties"
    src: nexus.properties.j2
  register: nexus_config_changed

- name: Lower Nexus disk space threshold
  become: true
  lineinfile:
    backrefs: yes
    dest: "{{ nexus_directory_home }}/etc/karaf/system.properties"
    insertafter: EOF
    line: "storage.diskCache.diskFreeSpaceLimit={{ nexus_configuration_disk_free_space_limit }}"
    regexp: ^storage\.diskCache\.diskFreeSpaceLimit
  when: nexus_configuration_disk_free_space_limit is not none
  register: nexus_config_changed

- name: Change permissions recursively on a directory
  become: true
  file:
    path: "/home/{{ nexus_user_name }}"
    owner: "{{ nexus_user_name }}"
    group: "{{ nexus_user_name }}"
    mode: '0755'
    state: directory
    recurse: yes

- name: Start Nexus service if enabled
  become: true
  service:
    enabled: yes
    name: nexus
    state: started
  when:
    - nexus_service_start_on_boot
    - not nexus_config_changed.changed
  tags:
    - skip_ansible_lint

- name: Ensure Nexus service is restarted
  become: true
  service:
    name: nexus
    state: restarted
  when:
    - nexus_service_start_on_boot
    - nexus_config_changed.changed
  tags:
    - skip_ansible_lint

- name: Wait for Nexus port if started
  wait_for:
    port: "{{ nexus_port }}"
    state: started
    timeout: "{{ nexus_port_check_timeout }}"
  when:
    - nexus_service_start_on_boot
